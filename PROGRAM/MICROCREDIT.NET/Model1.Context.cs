//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MICROCREDIT.NET
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MICROCREDITEntities : DbContext
    {
        public MICROCREDITEntities()
            : base("name=MICROCREDITEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<POLD_ADDRESS> POLD_ADDRESS { get; set; }
        public DbSet<POLD_COMMENT> POLD_COMMENT { get; set; }
        public DbSet<POLD_CREDIT> POLD_CREDIT { get; set; }
        public DbSet<POLD_DOCUMENT> POLD_DOCUMENT { get; set; }
        public DbSet<POLD_FIO> POLD_FIO { get; set; }
        public DbSet<POLD_MEDICAL> POLD_MEDICAL { get; set; }
        public DbSet<POLD_ORG> POLD_ORG { get; set; }
        public DbSet<POLD_PAYMENT> POLD_PAYMENT { get; set; }
        public DbSet<POLD_PLAN> POLD_PLAN { get; set; }
        public DbSet<POLD_PODOZR_TEL> POLD_PODOZR_TEL { get; set; }
        public DbSet<POLD_RELATIVE> POLD_RELATIVE { get; set; }
        public DbSet<POLD_WORK> POLD_WORK { get; set; }
        public DbSet<POLM_CREDIT_TEMPLATE> POLM_CREDIT_TEMPLATE { get; set; }
        public DbSet<POLM_HOLIDAYS> POLM_HOLIDAYS { get; set; }
        public DbSet<POLM_STAT_ORG> POLM_STAT_ORG { get; set; }
        public DbSet<POLM_VID_PLATEJA> POLM_VID_PLATEJA { get; set; }
        public DbSet<POLS_AK_SOST_ZAYM> POLS_AK_SOST_ZAYM { get; set; }
        public DbSet<POLS_LOG> POLS_LOG { get; set; }
        public DbSet<POLS_SYSTEM> POLS_SYSTEM { get; set; }
    
        public virtual ObjectResult<Nullable<int>> MC_AK_SOST_ZAYM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MC_AK_SOST_ZAYM");
        }
    
        public virtual int MC_BACKUP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BACKUP");
        }
    
        public virtual ObjectResult<MC_BROWSE_ACTIVE_DOCUMENT_Result> MC_BROWSE_ACTIVE_DOCUMENT(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_ACTIVE_DOCUMENT_Result>("MC_BROWSE_ACTIVE_DOCUMENT", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_ADDRESS_Result> MC_BROWSE_ADDRESS(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_ADDRESS_Result>("MC_BROWSE_ADDRESS", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual int MC_BROWSE_ADRES_JITELSTVA(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_ADRES_JITELSTVA", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual int MC_BROWSE_ADRES_REGISTRATSII(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_ADRES_REGISTRATSII", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_ARHIV_DOCUMENT_Result> MC_BROWSE_ARHIV_DOCUMENT(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_ARHIV_DOCUMENT_Result>("MC_BROWSE_ARHIV_DOCUMENT", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_COMMENT_Result> MC_BROWSE_COMMENT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_COMMENT_Result>("MC_BROWSE_COMMENT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_CREDIT_Result> MC_BROWSE_CREDIT(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_CREDIT_Result>("MC_BROWSE_CREDIT", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_CREDIT_TEMPLATE_Result> MC_BROWSE_CREDIT_TEMPLATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_CREDIT_TEMPLATE_Result>("MC_BROWSE_CREDIT_TEMPLATE");
        }
    
        public virtual ObjectResult<MC_BROWSE_DOCUMENT_Result> MC_BROWSE_DOCUMENT(Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> active)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_DOCUMENT_Result>("MC_BROWSE_DOCUMENT", counter0_fioParameter, lpuin_fioParameter, activeParameter);
        }
    
        public virtual int MC_BROWSE_FIO_RASSMZAYAV(string kod_otdeleniya)
        {
            var kod_otdeleniyaParameter = kod_otdeleniya != null ?
                new ObjectParameter("kod_otdeleniya", kod_otdeleniya) :
                new ObjectParameter("kod_otdeleniya", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_FIO_RASSMZAYAV", kod_otdeleniyaParameter);
        }
    
        public virtual int MC_BROWSE_HOLIDAYS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_HOLIDAYS");
        }
    
        public virtual int MC_BROWSE_MEDICAL(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_MEDICAL", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual int MC_BROWSE_NOTIFY_PERSON_LIST(Nullable<long> smsTemplateCounter, Nullable<int> smsTemplateLpuin)
        {
            var smsTemplateCounterParameter = smsTemplateCounter.HasValue ?
                new ObjectParameter("SmsTemplateCounter", smsTemplateCounter) :
                new ObjectParameter("SmsTemplateCounter", typeof(long));
    
            var smsTemplateLpuinParameter = smsTemplateLpuin.HasValue ?
                new ObjectParameter("SmsTemplateLpuin", smsTemplateLpuin) :
                new ObjectParameter("SmsTemplateLpuin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_NOTIFY_PERSON_LIST", smsTemplateCounterParameter, smsTemplateLpuinParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_OPTIONS_Result> MC_BROWSE_OPTIONS(Nullable<int> lpuin, string @operator, Nullable<long> counter0_user, Nullable<int> lpuin_user)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_userParameter = counter0_user.HasValue ?
                new ObjectParameter("counter0_user", counter0_user) :
                new ObjectParameter("counter0_user", typeof(long));
    
            var lpuin_userParameter = lpuin_user.HasValue ?
                new ObjectParameter("lpuin_user", lpuin_user) :
                new ObjectParameter("lpuin_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_OPTIONS_Result>("MC_BROWSE_OPTIONS", lpuinParameter, operatorParameter, counter0_userParameter, lpuin_userParameter);
        }
    
        public virtual int MC_BROWSE_ORG(Nullable<int> statOrg1, Nullable<int> statOrg2)
        {
            var statOrg1Parameter = statOrg1.HasValue ?
                new ObjectParameter("statOrg1", statOrg1) :
                new ObjectParameter("statOrg1", typeof(int));
    
            var statOrg2Parameter = statOrg2.HasValue ?
                new ObjectParameter("statOrg2", statOrg2) :
                new ObjectParameter("statOrg2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_ORG", statOrg1Parameter, statOrg2Parameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_PAYMENT_Result> MC_BROWSE_PAYMENT(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_PAYMENT_Result>("MC_BROWSE_PAYMENT", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual int MC_BROWSE_PLAN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_PLAN");
        }
    
        public virtual int MC_BROWSE_PODOZR_TEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_PODOZR_TEL");
        }
    
        public virtual int MC_BROWSE_RELATIVE(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_RELATIVE", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_SMS_TEMPLATE_Result> MC_BROWSE_SMS_TEMPLATE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_SMS_TEMPLATE_Result>("MC_BROWSE_SMS_TEMPLATE");
        }
    
        public virtual int MC_BROWSE_WORK(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_WORK", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual int MC_BROWSE_ZVON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_BROWSE_ZVON");
        }
    
        public virtual ObjectResult<Nullable<int>> MC_CHECK_FIO_EXISTS(Nullable<long> counter0, Nullable<int> lpuin)
        {
            var counter0Parameter = counter0.HasValue ?
                new ObjectParameter("counter0", counter0) :
                new ObjectParameter("counter0", typeof(long));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MC_CHECK_FIO_EXISTS", counter0Parameter, lpuinParameter);
        }
    
        public virtual ObjectResult<string> MC_GET_FULLADR(Nullable<short> ter, Nullable<short> orgn1, Nullable<short> orgn2, Nullable<short> orgn3, Nullable<short> razdel, Nullable<decimal> street, Nullable<short> house, string houseliter, Nullable<byte> corpus, Nullable<short> flat, string flatliter, string commentadr)
        {
            var terParameter = ter.HasValue ?
                new ObjectParameter("ter", ter) :
                new ObjectParameter("ter", typeof(short));
    
            var orgn1Parameter = orgn1.HasValue ?
                new ObjectParameter("orgn1", orgn1) :
                new ObjectParameter("orgn1", typeof(short));
    
            var orgn2Parameter = orgn2.HasValue ?
                new ObjectParameter("orgn2", orgn2) :
                new ObjectParameter("orgn2", typeof(short));
    
            var orgn3Parameter = orgn3.HasValue ?
                new ObjectParameter("orgn3", orgn3) :
                new ObjectParameter("orgn3", typeof(short));
    
            var razdelParameter = razdel.HasValue ?
                new ObjectParameter("razdel", razdel) :
                new ObjectParameter("razdel", typeof(short));
    
            var streetParameter = street.HasValue ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(decimal));
    
            var houseParameter = house.HasValue ?
                new ObjectParameter("house", house) :
                new ObjectParameter("house", typeof(short));
    
            var houseliterParameter = houseliter != null ?
                new ObjectParameter("houseliter", houseliter) :
                new ObjectParameter("houseliter", typeof(string));
    
            var corpusParameter = corpus.HasValue ?
                new ObjectParameter("corpus", corpus) :
                new ObjectParameter("corpus", typeof(byte));
    
            var flatParameter = flat.HasValue ?
                new ObjectParameter("flat", flat) :
                new ObjectParameter("flat", typeof(short));
    
            var flatliterParameter = flatliter != null ?
                new ObjectParameter("flatliter", flatliter) :
                new ObjectParameter("flatliter", typeof(string));
    
            var commentadrParameter = commentadr != null ?
                new ObjectParameter("commentadr", commentadr) :
                new ObjectParameter("commentadr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MC_GET_FULLADR", terParameter, orgn1Parameter, orgn2Parameter, orgn3Parameter, razdelParameter, streetParameter, houseParameter, houseliterParameter, corpusParameter, flatParameter, flatliterParameter, commentadrParameter);
        }
    
        public virtual ObjectResult<MC_KR_INF_Result> MC_KR_INF(Nullable<long> counter0_fio, Nullable<int> lpuin_fio)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_KR_INF_Result>("MC_KR_INF", counter0_fioParameter, lpuin_fioParameter);
        }
    
        public virtual ObjectResult<MC_POISK_DUB_Result> MC_POISK_DUB()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_POISK_DUB_Result>("MC_POISK_DUB");
        }
    
        public virtual int MC_POLD_ADDRESS_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, string r_post_index, Nullable<short> r_area, Nullable<short> r_ter, Nullable<short> r_orgn1, Nullable<short> r_orgn2, Nullable<short> r_orgn3, Nullable<short> r_razdel, string r_okato, Nullable<int> r_street, Nullable<short> r_house, string r_houseliter, Nullable<byte> r_corpus, Nullable<short> r_flat, string r_flatliter, string r_fulladr, string j_post_index, Nullable<short> j_area, Nullable<short> j_ter, Nullable<short> j_orgn1, Nullable<short> j_orgn2, Nullable<short> j_orgn3, Nullable<short> j_razdel, string j_okato, Nullable<int> j_street, Nullable<short> j_house, string j_houseliter, Nullable<byte> j_corpus, Nullable<short> j_flat, string j_flatliter, string j_fulladr, Nullable<int> j_equals_r)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var r_post_indexParameter = r_post_index != null ?
                new ObjectParameter("r_post_index", r_post_index) :
                new ObjectParameter("r_post_index", typeof(string));
    
            var r_areaParameter = r_area.HasValue ?
                new ObjectParameter("r_area", r_area) :
                new ObjectParameter("r_area", typeof(short));
    
            var r_terParameter = r_ter.HasValue ?
                new ObjectParameter("r_ter", r_ter) :
                new ObjectParameter("r_ter", typeof(short));
    
            var r_orgn1Parameter = r_orgn1.HasValue ?
                new ObjectParameter("r_orgn1", r_orgn1) :
                new ObjectParameter("r_orgn1", typeof(short));
    
            var r_orgn2Parameter = r_orgn2.HasValue ?
                new ObjectParameter("r_orgn2", r_orgn2) :
                new ObjectParameter("r_orgn2", typeof(short));
    
            var r_orgn3Parameter = r_orgn3.HasValue ?
                new ObjectParameter("r_orgn3", r_orgn3) :
                new ObjectParameter("r_orgn3", typeof(short));
    
            var r_razdelParameter = r_razdel.HasValue ?
                new ObjectParameter("r_razdel", r_razdel) :
                new ObjectParameter("r_razdel", typeof(short));
    
            var r_okatoParameter = r_okato != null ?
                new ObjectParameter("r_okato", r_okato) :
                new ObjectParameter("r_okato", typeof(string));
    
            var r_streetParameter = r_street.HasValue ?
                new ObjectParameter("r_street", r_street) :
                new ObjectParameter("r_street", typeof(int));
    
            var r_houseParameter = r_house.HasValue ?
                new ObjectParameter("r_house", r_house) :
                new ObjectParameter("r_house", typeof(short));
    
            var r_houseliterParameter = r_houseliter != null ?
                new ObjectParameter("r_houseliter", r_houseliter) :
                new ObjectParameter("r_houseliter", typeof(string));
    
            var r_corpusParameter = r_corpus.HasValue ?
                new ObjectParameter("r_corpus", r_corpus) :
                new ObjectParameter("r_corpus", typeof(byte));
    
            var r_flatParameter = r_flat.HasValue ?
                new ObjectParameter("r_flat", r_flat) :
                new ObjectParameter("r_flat", typeof(short));
    
            var r_flatliterParameter = r_flatliter != null ?
                new ObjectParameter("r_flatliter", r_flatliter) :
                new ObjectParameter("r_flatliter", typeof(string));
    
            var r_fulladrParameter = r_fulladr != null ?
                new ObjectParameter("r_fulladr", r_fulladr) :
                new ObjectParameter("r_fulladr", typeof(string));
    
            var j_post_indexParameter = j_post_index != null ?
                new ObjectParameter("j_post_index", j_post_index) :
                new ObjectParameter("j_post_index", typeof(string));
    
            var j_areaParameter = j_area.HasValue ?
                new ObjectParameter("j_area", j_area) :
                new ObjectParameter("j_area", typeof(short));
    
            var j_terParameter = j_ter.HasValue ?
                new ObjectParameter("j_ter", j_ter) :
                new ObjectParameter("j_ter", typeof(short));
    
            var j_orgn1Parameter = j_orgn1.HasValue ?
                new ObjectParameter("j_orgn1", j_orgn1) :
                new ObjectParameter("j_orgn1", typeof(short));
    
            var j_orgn2Parameter = j_orgn2.HasValue ?
                new ObjectParameter("j_orgn2", j_orgn2) :
                new ObjectParameter("j_orgn2", typeof(short));
    
            var j_orgn3Parameter = j_orgn3.HasValue ?
                new ObjectParameter("j_orgn3", j_orgn3) :
                new ObjectParameter("j_orgn3", typeof(short));
    
            var j_razdelParameter = j_razdel.HasValue ?
                new ObjectParameter("j_razdel", j_razdel) :
                new ObjectParameter("j_razdel", typeof(short));
    
            var j_okatoParameter = j_okato != null ?
                new ObjectParameter("j_okato", j_okato) :
                new ObjectParameter("j_okato", typeof(string));
    
            var j_streetParameter = j_street.HasValue ?
                new ObjectParameter("j_street", j_street) :
                new ObjectParameter("j_street", typeof(int));
    
            var j_houseParameter = j_house.HasValue ?
                new ObjectParameter("j_house", j_house) :
                new ObjectParameter("j_house", typeof(short));
    
            var j_houseliterParameter = j_houseliter != null ?
                new ObjectParameter("j_houseliter", j_houseliter) :
                new ObjectParameter("j_houseliter", typeof(string));
    
            var j_corpusParameter = j_corpus.HasValue ?
                new ObjectParameter("j_corpus", j_corpus) :
                new ObjectParameter("j_corpus", typeof(byte));
    
            var j_flatParameter = j_flat.HasValue ?
                new ObjectParameter("j_flat", j_flat) :
                new ObjectParameter("j_flat", typeof(short));
    
            var j_flatliterParameter = j_flatliter != null ?
                new ObjectParameter("j_flatliter", j_flatliter) :
                new ObjectParameter("j_flatliter", typeof(string));
    
            var j_fulladrParameter = j_fulladr != null ?
                new ObjectParameter("j_fulladr", j_fulladr) :
                new ObjectParameter("j_fulladr", typeof(string));
    
            var j_equals_rParameter = j_equals_r.HasValue ?
                new ObjectParameter("j_equals_r", j_equals_r) :
                new ObjectParameter("j_equals_r", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_ADDRESS_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, r_post_indexParameter, r_areaParameter, r_terParameter, r_orgn1Parameter, r_orgn2Parameter, r_orgn3Parameter, r_razdelParameter, r_okatoParameter, r_streetParameter, r_houseParameter, r_houseliterParameter, r_corpusParameter, r_flatParameter, r_flatliterParameter, r_fulladrParameter, j_post_indexParameter, j_areaParameter, j_terParameter, j_orgn1Parameter, j_orgn2Parameter, j_orgn3Parameter, j_razdelParameter, j_okatoParameter, j_streetParameter, j_houseParameter, j_houseliterParameter, j_corpusParameter, j_flatParameter, j_flatliterParameter, j_fulladrParameter, j_equals_rParameter);
        }
    
        public virtual int MC_POLD_ADDRESS_UPDATE(Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> lpuin, string @operator, Nullable<int> registratsiiIliJitelstva, string post_index, Nullable<short> area, Nullable<short> ter, Nullable<short> orgn1, Nullable<short> orgn2, Nullable<short> orgn3, Nullable<short> razdel, string okato, Nullable<short> street, Nullable<short> house, string houseliter, Nullable<byte> corpus, Nullable<short> flat, string flatliter, string fulladr, Nullable<int> j_equals_r)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var registratsiiIliJitelstvaParameter = registratsiiIliJitelstva.HasValue ?
                new ObjectParameter("registratsiiIliJitelstva", registratsiiIliJitelstva) :
                new ObjectParameter("registratsiiIliJitelstva", typeof(int));
    
            var post_indexParameter = post_index != null ?
                new ObjectParameter("post_index", post_index) :
                new ObjectParameter("post_index", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(short));
    
            var terParameter = ter.HasValue ?
                new ObjectParameter("ter", ter) :
                new ObjectParameter("ter", typeof(short));
    
            var orgn1Parameter = orgn1.HasValue ?
                new ObjectParameter("orgn1", orgn1) :
                new ObjectParameter("orgn1", typeof(short));
    
            var orgn2Parameter = orgn2.HasValue ?
                new ObjectParameter("orgn2", orgn2) :
                new ObjectParameter("orgn2", typeof(short));
    
            var orgn3Parameter = orgn3.HasValue ?
                new ObjectParameter("orgn3", orgn3) :
                new ObjectParameter("orgn3", typeof(short));
    
            var razdelParameter = razdel.HasValue ?
                new ObjectParameter("razdel", razdel) :
                new ObjectParameter("razdel", typeof(short));
    
            var okatoParameter = okato != null ?
                new ObjectParameter("okato", okato) :
                new ObjectParameter("okato", typeof(string));
    
            var streetParameter = street.HasValue ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(short));
    
            var houseParameter = house.HasValue ?
                new ObjectParameter("house", house) :
                new ObjectParameter("house", typeof(short));
    
            var houseliterParameter = houseliter != null ?
                new ObjectParameter("houseliter", houseliter) :
                new ObjectParameter("houseliter", typeof(string));
    
            var corpusParameter = corpus.HasValue ?
                new ObjectParameter("corpus", corpus) :
                new ObjectParameter("corpus", typeof(byte));
    
            var flatParameter = flat.HasValue ?
                new ObjectParameter("flat", flat) :
                new ObjectParameter("flat", typeof(short));
    
            var flatliterParameter = flatliter != null ?
                new ObjectParameter("flatliter", flatliter) :
                new ObjectParameter("flatliter", typeof(string));
    
            var fulladrParameter = fulladr != null ?
                new ObjectParameter("fulladr", fulladr) :
                new ObjectParameter("fulladr", typeof(string));
    
            var j_equals_rParameter = j_equals_r.HasValue ?
                new ObjectParameter("j_equals_r", j_equals_r) :
                new ObjectParameter("j_equals_r", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_ADDRESS_UPDATE", counter0_fioParameter, lpuin_fioParameter, lpuinParameter, operatorParameter, registratsiiIliJitelstvaParameter, post_indexParameter, areaParameter, terParameter, orgn1Parameter, orgn2Parameter, orgn3Parameter, razdelParameter, okatoParameter, streetParameter, houseParameter, houseliterParameter, corpusParameter, flatParameter, flatliterParameter, fulladrParameter, j_equals_rParameter);
        }
    
        public virtual int MC_POLD_COMMENT_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, string comment)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_COMMENT_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, commentParameter);
        }
    
        public virtual int MC_POLD_CREDIT_DELETE(Nullable<long> counter0_credit, Nullable<int> lpuin_credit, Nullable<int> lpuin, string @operator)
        {
            var counter0_creditParameter = counter0_credit.HasValue ?
                new ObjectParameter("counter0_credit", counter0_credit) :
                new ObjectParameter("counter0_credit", typeof(long));
    
            var lpuin_creditParameter = lpuin_credit.HasValue ?
                new ObjectParameter("lpuin_credit", lpuin_credit) :
                new ObjectParameter("lpuin_credit", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_CREDIT_DELETE", counter0_creditParameter, lpuin_creditParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_CREDIT_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> template_code, Nullable<int> summa_zayma, Nullable<System.DateTime> data_zayma, Nullable<int> srok_zayma, Nullable<decimal> stavka_v_den, Nullable<decimal> summa_protsentov_v_den, Nullable<System.DateTime> data_vozvrata, Nullable<decimal> summa_k_oplate, Nullable<decimal> pereplata, Nullable<System.DateTime> data_zakritiya, Nullable<int> prosrochen_dney, Nullable<int> summa_shtrafa, Nullable<int> summa_plateja, Nullable<int> ostatok_po_zaymu, string nomer_dogovora, Nullable<int> item_index, string kod_otdeleniya, Nullable<int> stat, string comment)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var template_codeParameter = template_code.HasValue ?
                new ObjectParameter("template_code", template_code) :
                new ObjectParameter("template_code", typeof(int));
    
            var summa_zaymaParameter = summa_zayma.HasValue ?
                new ObjectParameter("summa_zayma", summa_zayma) :
                new ObjectParameter("summa_zayma", typeof(int));
    
            var data_zaymaParameter = data_zayma.HasValue ?
                new ObjectParameter("data_zayma", data_zayma) :
                new ObjectParameter("data_zayma", typeof(System.DateTime));
    
            var srok_zaymaParameter = srok_zayma.HasValue ?
                new ObjectParameter("srok_zayma", srok_zayma) :
                new ObjectParameter("srok_zayma", typeof(int));
    
            var stavka_v_denParameter = stavka_v_den.HasValue ?
                new ObjectParameter("stavka_v_den", stavka_v_den) :
                new ObjectParameter("stavka_v_den", typeof(decimal));
    
            var summa_protsentov_v_denParameter = summa_protsentov_v_den.HasValue ?
                new ObjectParameter("summa_protsentov_v_den", summa_protsentov_v_den) :
                new ObjectParameter("summa_protsentov_v_den", typeof(decimal));
    
            var data_vozvrataParameter = data_vozvrata.HasValue ?
                new ObjectParameter("data_vozvrata", data_vozvrata) :
                new ObjectParameter("data_vozvrata", typeof(System.DateTime));
    
            var summa_k_oplateParameter = summa_k_oplate.HasValue ?
                new ObjectParameter("summa_k_oplate", summa_k_oplate) :
                new ObjectParameter("summa_k_oplate", typeof(decimal));
    
            var pereplataParameter = pereplata.HasValue ?
                new ObjectParameter("pereplata", pereplata) :
                new ObjectParameter("pereplata", typeof(decimal));
    
            var data_zakritiyaParameter = data_zakritiya.HasValue ?
                new ObjectParameter("data_zakritiya", data_zakritiya) :
                new ObjectParameter("data_zakritiya", typeof(System.DateTime));
    
            var prosrochen_dneyParameter = prosrochen_dney.HasValue ?
                new ObjectParameter("prosrochen_dney", prosrochen_dney) :
                new ObjectParameter("prosrochen_dney", typeof(int));
    
            var summa_shtrafaParameter = summa_shtrafa.HasValue ?
                new ObjectParameter("summa_shtrafa", summa_shtrafa) :
                new ObjectParameter("summa_shtrafa", typeof(int));
    
            var summa_platejaParameter = summa_plateja.HasValue ?
                new ObjectParameter("summa_plateja", summa_plateja) :
                new ObjectParameter("summa_plateja", typeof(int));
    
            var ostatok_po_zaymuParameter = ostatok_po_zaymu.HasValue ?
                new ObjectParameter("ostatok_po_zaymu", ostatok_po_zaymu) :
                new ObjectParameter("ostatok_po_zaymu", typeof(int));
    
            var nomer_dogovoraParameter = nomer_dogovora != null ?
                new ObjectParameter("nomer_dogovora", nomer_dogovora) :
                new ObjectParameter("nomer_dogovora", typeof(string));
    
            var item_indexParameter = item_index.HasValue ?
                new ObjectParameter("item_index", item_index) :
                new ObjectParameter("item_index", typeof(int));
    
            var kod_otdeleniyaParameter = kod_otdeleniya != null ?
                new ObjectParameter("kod_otdeleniya", kod_otdeleniya) :
                new ObjectParameter("kod_otdeleniya", typeof(string));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_CREDIT_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, template_codeParameter, summa_zaymaParameter, data_zaymaParameter, srok_zaymaParameter, stavka_v_denParameter, summa_protsentov_v_denParameter, data_vozvrataParameter, summa_k_oplateParameter, pereplataParameter, data_zakritiyaParameter, prosrochen_dneyParameter, summa_shtrafaParameter, summa_platejaParameter, ostatok_po_zaymuParameter, nomer_dogovoraParameter, item_indexParameter, kod_otdeleniyaParameter, statParameter, commentParameter);
        }
    
        public virtual int MC_POLD_CREDIT_UPDATE(Nullable<long> counter0_credit, Nullable<int> lpuin_credit, Nullable<int> lpuin, string @operator, Nullable<int> template_code, Nullable<int> summa_zayma, Nullable<System.DateTime> data_zayma, Nullable<int> srok_zayma, Nullable<decimal> stavka_v_den, Nullable<decimal> summa_protsentov_v_den, Nullable<System.DateTime> data_vozvrata, Nullable<decimal> summa_k_oplate, Nullable<decimal> pereplata, Nullable<System.DateTime> data_zakritiya)
        {
            var counter0_creditParameter = counter0_credit.HasValue ?
                new ObjectParameter("counter0_credit", counter0_credit) :
                new ObjectParameter("counter0_credit", typeof(long));
    
            var lpuin_creditParameter = lpuin_credit.HasValue ?
                new ObjectParameter("lpuin_credit", lpuin_credit) :
                new ObjectParameter("lpuin_credit", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var template_codeParameter = template_code.HasValue ?
                new ObjectParameter("template_code", template_code) :
                new ObjectParameter("template_code", typeof(int));
    
            var summa_zaymaParameter = summa_zayma.HasValue ?
                new ObjectParameter("summa_zayma", summa_zayma) :
                new ObjectParameter("summa_zayma", typeof(int));
    
            var data_zaymaParameter = data_zayma.HasValue ?
                new ObjectParameter("data_zayma", data_zayma) :
                new ObjectParameter("data_zayma", typeof(System.DateTime));
    
            var srok_zaymaParameter = srok_zayma.HasValue ?
                new ObjectParameter("srok_zayma", srok_zayma) :
                new ObjectParameter("srok_zayma", typeof(int));
    
            var stavka_v_denParameter = stavka_v_den.HasValue ?
                new ObjectParameter("stavka_v_den", stavka_v_den) :
                new ObjectParameter("stavka_v_den", typeof(decimal));
    
            var summa_protsentov_v_denParameter = summa_protsentov_v_den.HasValue ?
                new ObjectParameter("summa_protsentov_v_den", summa_protsentov_v_den) :
                new ObjectParameter("summa_protsentov_v_den", typeof(decimal));
    
            var data_vozvrataParameter = data_vozvrata.HasValue ?
                new ObjectParameter("data_vozvrata", data_vozvrata) :
                new ObjectParameter("data_vozvrata", typeof(System.DateTime));
    
            var summa_k_oplateParameter = summa_k_oplate.HasValue ?
                new ObjectParameter("summa_k_oplate", summa_k_oplate) :
                new ObjectParameter("summa_k_oplate", typeof(decimal));
    
            var pereplataParameter = pereplata.HasValue ?
                new ObjectParameter("pereplata", pereplata) :
                new ObjectParameter("pereplata", typeof(decimal));
    
            var data_zakritiyaParameter = data_zakritiya.HasValue ?
                new ObjectParameter("data_zakritiya", data_zakritiya) :
                new ObjectParameter("data_zakritiya", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_CREDIT_UPDATE", counter0_creditParameter, lpuin_creditParameter, lpuinParameter, operatorParameter, template_codeParameter, summa_zaymaParameter, data_zaymaParameter, srok_zaymaParameter, stavka_v_denParameter, summa_protsentov_v_denParameter, data_vozvrataParameter, summa_k_oplateParameter, pereplataParameter, data_zakritiyaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MC_POLD_CREDIT_UPDATE_CALC_FIELDS(Nullable<long> fio_counter_credit, Nullable<int> fio_lpuin_credit, Nullable<int> item_index_credit)
        {
            var fio_counter_creditParameter = fio_counter_credit.HasValue ?
                new ObjectParameter("fio_counter_credit", fio_counter_credit) :
                new ObjectParameter("fio_counter_credit", typeof(long));
    
            var fio_lpuin_creditParameter = fio_lpuin_credit.HasValue ?
                new ObjectParameter("fio_lpuin_credit", fio_lpuin_credit) :
                new ObjectParameter("fio_lpuin_credit", typeof(int));
    
            var item_index_creditParameter = item_index_credit.HasValue ?
                new ObjectParameter("item_index_credit", item_index_credit) :
                new ObjectParameter("item_index_credit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MC_POLD_CREDIT_UPDATE_CALC_FIELDS", fio_counter_creditParameter, fio_lpuin_creditParameter, item_index_creditParameter);
        }
    
        public virtual int MC_POLD_DOCUMENT_DELETE(Nullable<long> counter0_document, Nullable<int> lpuin_document, Nullable<int> lpuin, string @operator)
        {
            var counter0_documentParameter = counter0_document.HasValue ?
                new ObjectParameter("counter0_document", counter0_document) :
                new ObjectParameter("counter0_document", typeof(long));
    
            var lpuin_documentParameter = lpuin_document.HasValue ?
                new ObjectParameter("lpuin_document", lpuin_document) :
                new ObjectParameter("lpuin_document", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_DOCUMENT_DELETE", counter0_documentParameter, lpuin_documentParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_DOCUMENT_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<byte> active, string surname, string name, string secname, Nullable<byte> sex, Nullable<System.DateTime> birthday, Nullable<byte> doctype, string sdoc, Nullable<long> ndoc, Nullable<System.DateTime> when, string who, Nullable<System.DateTime> d_end, Nullable<byte> item_index)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(byte));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var secnameParameter = secname != null ?
                new ObjectParameter("secname", secname) :
                new ObjectParameter("secname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(byte));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var doctypeParameter = doctype.HasValue ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(byte));
    
            var sdocParameter = sdoc != null ?
                new ObjectParameter("sdoc", sdoc) :
                new ObjectParameter("sdoc", typeof(string));
    
            var ndocParameter = ndoc.HasValue ?
                new ObjectParameter("ndoc", ndoc) :
                new ObjectParameter("ndoc", typeof(long));
    
            var whenParameter = when.HasValue ?
                new ObjectParameter("when", when) :
                new ObjectParameter("when", typeof(System.DateTime));
    
            var whoParameter = who != null ?
                new ObjectParameter("who", who) :
                new ObjectParameter("who", typeof(string));
    
            var d_endParameter = d_end.HasValue ?
                new ObjectParameter("d_end", d_end) :
                new ObjectParameter("d_end", typeof(System.DateTime));
    
            var item_indexParameter = item_index.HasValue ?
                new ObjectParameter("item_index", item_index) :
                new ObjectParameter("item_index", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_DOCUMENT_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, activeParameter, surnameParameter, nameParameter, secnameParameter, sexParameter, birthdayParameter, doctypeParameter, sdocParameter, ndocParameter, whenParameter, whoParameter, d_endParameter, item_indexParameter);
        }
    
        public virtual int MC_POLD_DOCUMENT_UPDATE(Nullable<long> counter0_document, Nullable<int> lpuin_document, Nullable<int> lpuin, string @operator, string surname, string name, string secname, Nullable<byte> sex, Nullable<System.DateTime> birthday, Nullable<byte> doctype, string sdoc, Nullable<long> ndoc, Nullable<System.DateTime> when, string who, Nullable<System.DateTime> d_end, Nullable<byte> active)
        {
            var counter0_documentParameter = counter0_document.HasValue ?
                new ObjectParameter("counter0_document", counter0_document) :
                new ObjectParameter("counter0_document", typeof(long));
    
            var lpuin_documentParameter = lpuin_document.HasValue ?
                new ObjectParameter("lpuin_document", lpuin_document) :
                new ObjectParameter("lpuin_document", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var secnameParameter = secname != null ?
                new ObjectParameter("secname", secname) :
                new ObjectParameter("secname", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(byte));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            var doctypeParameter = doctype.HasValue ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(byte));
    
            var sdocParameter = sdoc != null ?
                new ObjectParameter("sdoc", sdoc) :
                new ObjectParameter("sdoc", typeof(string));
    
            var ndocParameter = ndoc.HasValue ?
                new ObjectParameter("ndoc", ndoc) :
                new ObjectParameter("ndoc", typeof(long));
    
            var whenParameter = when.HasValue ?
                new ObjectParameter("when", when) :
                new ObjectParameter("when", typeof(System.DateTime));
    
            var whoParameter = who != null ?
                new ObjectParameter("who", who) :
                new ObjectParameter("who", typeof(string));
    
            var d_endParameter = d_end.HasValue ?
                new ObjectParameter("d_end", d_end) :
                new ObjectParameter("d_end", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_DOCUMENT_UPDATE", counter0_documentParameter, lpuin_documentParameter, lpuinParameter, operatorParameter, surnameParameter, nameParameter, secnameParameter, sexParameter, birthdayParameter, doctypeParameter, sdocParameter, ndocParameter, whenParameter, whoParameter, d_endParameter, activeParameter);
        }
    
        public virtual int MC_POLD_FIO_DELETE(Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> lpuin, string @operator)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_FIO_DELETE", counter0_fioParameter, lpuin_fioParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_FIO_INSERT(Nullable<int> lpuin, string @operator)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_FIO_INSERT", lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_MEDICAL_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<byte> family_status, Nullable<byte> family_count, Nullable<byte> education, string phone_home_r, string phone_home_j, string phone_mobile, string property, string e_mail)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var family_statusParameter = family_status.HasValue ?
                new ObjectParameter("family_status", family_status) :
                new ObjectParameter("family_status", typeof(byte));
    
            var family_countParameter = family_count.HasValue ?
                new ObjectParameter("family_count", family_count) :
                new ObjectParameter("family_count", typeof(byte));
    
            var educationParameter = education.HasValue ?
                new ObjectParameter("education", education) :
                new ObjectParameter("education", typeof(byte));
    
            var phone_home_rParameter = phone_home_r != null ?
                new ObjectParameter("phone_home_r", phone_home_r) :
                new ObjectParameter("phone_home_r", typeof(string));
    
            var phone_home_jParameter = phone_home_j != null ?
                new ObjectParameter("phone_home_j", phone_home_j) :
                new ObjectParameter("phone_home_j", typeof(string));
    
            var phone_mobileParameter = phone_mobile != null ?
                new ObjectParameter("phone_mobile", phone_mobile) :
                new ObjectParameter("phone_mobile", typeof(string));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var e_mailParameter = e_mail != null ?
                new ObjectParameter("e_mail", e_mail) :
                new ObjectParameter("e_mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_MEDICAL_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, family_statusParameter, family_countParameter, educationParameter, phone_home_rParameter, phone_home_jParameter, phone_mobileParameter, propertyParameter, e_mailParameter);
        }
    
        public virtual int MC_POLD_MEDICAL_UPDATE(Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> lpuin, string @operator, Nullable<byte> family_status, Nullable<byte> family_count, Nullable<byte> education, string phone_home_r, string phone_home_j, string phone_mobile, string property, string e_mail)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var family_statusParameter = family_status.HasValue ?
                new ObjectParameter("family_status", family_status) :
                new ObjectParameter("family_status", typeof(byte));
    
            var family_countParameter = family_count.HasValue ?
                new ObjectParameter("family_count", family_count) :
                new ObjectParameter("family_count", typeof(byte));
    
            var educationParameter = education.HasValue ?
                new ObjectParameter("education", education) :
                new ObjectParameter("education", typeof(byte));
    
            var phone_home_rParameter = phone_home_r != null ?
                new ObjectParameter("phone_home_r", phone_home_r) :
                new ObjectParameter("phone_home_r", typeof(string));
    
            var phone_home_jParameter = phone_home_j != null ?
                new ObjectParameter("phone_home_j", phone_home_j) :
                new ObjectParameter("phone_home_j", typeof(string));
    
            var phone_mobileParameter = phone_mobile != null ?
                new ObjectParameter("phone_mobile", phone_mobile) :
                new ObjectParameter("phone_mobile", typeof(string));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var e_mailParameter = e_mail != null ?
                new ObjectParameter("e_mail", e_mail) :
                new ObjectParameter("e_mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_MEDICAL_UPDATE", counter0_fioParameter, lpuin_fioParameter, lpuinParameter, operatorParameter, family_statusParameter, family_countParameter, educationParameter, phone_home_rParameter, phone_home_jParameter, phone_mobileParameter, propertyParameter, e_mailParameter);
        }
    
        public virtual int MC_POLD_ORG_INSERT(Nullable<int> lpuin, string @operator)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_ORG_INSERT", lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_PAYMENT_ADD_CASH_INSERT(Nullable<int> lpuin, string @operator, Nullable<int> summa_plateja, string kod_otdeleniya, Nullable<int> oper_type, Nullable<int> oper_vid, string comment)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var summa_platejaParameter = summa_plateja.HasValue ?
                new ObjectParameter("summa_plateja", summa_plateja) :
                new ObjectParameter("summa_plateja", typeof(int));
    
            var kod_otdeleniyaParameter = kod_otdeleniya != null ?
                new ObjectParameter("kod_otdeleniya", kod_otdeleniya) :
                new ObjectParameter("kod_otdeleniya", typeof(string));
    
            var oper_typeParameter = oper_type.HasValue ?
                new ObjectParameter("oper_type", oper_type) :
                new ObjectParameter("oper_type", typeof(int));
    
            var oper_vidParameter = oper_vid.HasValue ?
                new ObjectParameter("oper_vid", oper_vid) :
                new ObjectParameter("oper_vid", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_PAYMENT_ADD_CASH_INSERT", lpuinParameter, operatorParameter, summa_platejaParameter, kod_otdeleniyaParameter, oper_typeParameter, oper_vidParameter, commentParameter);
        }
    
        public virtual int MC_POLD_PAYMENT_DELETE(Nullable<long> counter0_payment, Nullable<int> lpuin_payment, Nullable<int> lpuin, string @operator)
        {
            var counter0_paymentParameter = counter0_payment.HasValue ?
                new ObjectParameter("counter0_payment", counter0_payment) :
                new ObjectParameter("counter0_payment", typeof(long));
    
            var lpuin_paymentParameter = lpuin_payment.HasValue ?
                new ObjectParameter("lpuin_payment", lpuin_payment) :
                new ObjectParameter("lpuin_payment", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_PAYMENT_DELETE", counter0_paymentParameter, lpuin_paymentParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual ObjectResult<MC_POLD_PAYMENT_INSERT_Result> MC_POLD_PAYMENT_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> item_index_credit, Nullable<System.DateTime> data_plateja, Nullable<int> summa_plateja, Nullable<int> vid_plateja, Nullable<int> item_index, Nullable<int> need_output)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var item_index_creditParameter = item_index_credit.HasValue ?
                new ObjectParameter("item_index_credit", item_index_credit) :
                new ObjectParameter("item_index_credit", typeof(int));
    
            var data_platejaParameter = data_plateja.HasValue ?
                new ObjectParameter("data_plateja", data_plateja) :
                new ObjectParameter("data_plateja", typeof(System.DateTime));
    
            var summa_platejaParameter = summa_plateja.HasValue ?
                new ObjectParameter("summa_plateja", summa_plateja) :
                new ObjectParameter("summa_plateja", typeof(int));
    
            var vid_platejaParameter = vid_plateja.HasValue ?
                new ObjectParameter("vid_plateja", vid_plateja) :
                new ObjectParameter("vid_plateja", typeof(int));
    
            var item_indexParameter = item_index.HasValue ?
                new ObjectParameter("item_index", item_index) :
                new ObjectParameter("item_index", typeof(int));
    
            var need_outputParameter = need_output.HasValue ?
                new ObjectParameter("need_output", need_output) :
                new ObjectParameter("need_output", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_POLD_PAYMENT_INSERT_Result>("MC_POLD_PAYMENT_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, item_index_creditParameter, data_platejaParameter, summa_platejaParameter, vid_platejaParameter, item_indexParameter, need_outputParameter);
        }
    
        public virtual int MC_POLD_PAYMENT_OUT_CASH_INSERT(Nullable<int> lpuin, string @operator, Nullable<int> summa_plateja, string kod_otdeleniya, Nullable<int> oper_type, Nullable<int> oper_vid, string comment)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var summa_platejaParameter = summa_plateja.HasValue ?
                new ObjectParameter("summa_plateja", summa_plateja) :
                new ObjectParameter("summa_plateja", typeof(int));
    
            var kod_otdeleniyaParameter = kod_otdeleniya != null ?
                new ObjectParameter("kod_otdeleniya", kod_otdeleniya) :
                new ObjectParameter("kod_otdeleniya", typeof(string));
    
            var oper_typeParameter = oper_type.HasValue ?
                new ObjectParameter("oper_type", oper_type) :
                new ObjectParameter("oper_type", typeof(int));
    
            var oper_vidParameter = oper_vid.HasValue ?
                new ObjectParameter("oper_vid", oper_vid) :
                new ObjectParameter("oper_vid", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_PAYMENT_OUT_CASH_INSERT", lpuinParameter, operatorParameter, summa_platejaParameter, kod_otdeleniyaParameter, oper_typeParameter, oper_vidParameter, commentParameter);
        }
    
        public virtual ObjectResult<MC_POLD_PAYMENT_UPDATE_Result> MC_POLD_PAYMENT_UPDATE(Nullable<long> counter0_payment, Nullable<int> lpuin_payment, Nullable<int> lpuin, string @operator, Nullable<System.DateTime> data_plateja, Nullable<int> summa_plateja, Nullable<int> vid_plateja)
        {
            var counter0_paymentParameter = counter0_payment.HasValue ?
                new ObjectParameter("counter0_payment", counter0_payment) :
                new ObjectParameter("counter0_payment", typeof(long));
    
            var lpuin_paymentParameter = lpuin_payment.HasValue ?
                new ObjectParameter("lpuin_payment", lpuin_payment) :
                new ObjectParameter("lpuin_payment", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var data_platejaParameter = data_plateja.HasValue ?
                new ObjectParameter("data_plateja", data_plateja) :
                new ObjectParameter("data_plateja", typeof(System.DateTime));
    
            var summa_platejaParameter = summa_plateja.HasValue ?
                new ObjectParameter("summa_plateja", summa_plateja) :
                new ObjectParameter("summa_plateja", typeof(int));
    
            var vid_platejaParameter = vid_plateja.HasValue ?
                new ObjectParameter("vid_plateja", vid_plateja) :
                new ObjectParameter("vid_plateja", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_POLD_PAYMENT_UPDATE_Result>("MC_POLD_PAYMENT_UPDATE", counter0_paymentParameter, lpuin_paymentParameter, lpuinParameter, operatorParameter, data_platejaParameter, summa_platejaParameter, vid_platejaParameter);
        }
    
        public virtual int MC_POLD_PLAN_DELETE(Nullable<long> counter0_plan, Nullable<int> lpuin_plan, Nullable<int> lpuin, string @operator)
        {
            var counter0_planParameter = counter0_plan.HasValue ?
                new ObjectParameter("counter0_plan", counter0_plan) :
                new ObjectParameter("counter0_plan", typeof(long));
    
            var lpuin_planParameter = lpuin_plan.HasValue ?
                new ObjectParameter("lpuin_plan", lpuin_plan) :
                new ObjectParameter("lpuin_plan", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_PLAN_DELETE", counter0_planParameter, lpuin_planParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MC_POLD_PLAN_INSERT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MC_POLD_PLAN_INSERT");
        }
    
        public virtual int MC_POLD_RELATIVE_DELETE(Nullable<long> counter0_relative, Nullable<int> lpuin_relative, Nullable<int> lpuin, string @operator)
        {
            var counter0_relativeParameter = counter0_relative.HasValue ?
                new ObjectParameter("counter0_relative", counter0_relative) :
                new ObjectParameter("counter0_relative", typeof(long));
    
            var lpuin_relativeParameter = lpuin_relative.HasValue ?
                new ObjectParameter("lpuin_relative", lpuin_relative) :
                new ObjectParameter("lpuin_relative", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_RELATIVE_DELETE", counter0_relativeParameter, lpuin_relativeParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual int MC_POLD_RELATIVE_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, string surname, string name, string secname, Nullable<byte> age, Nullable<int> birth_year, Nullable<int> relative_relationship, string phone_home, string phone_mobile, string comment, Nullable<byte> item_index)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var secnameParameter = secname != null ?
                new ObjectParameter("secname", secname) :
                new ObjectParameter("secname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(byte));
    
            var birth_yearParameter = birth_year.HasValue ?
                new ObjectParameter("birth_year", birth_year) :
                new ObjectParameter("birth_year", typeof(int));
    
            var relative_relationshipParameter = relative_relationship.HasValue ?
                new ObjectParameter("relative_relationship", relative_relationship) :
                new ObjectParameter("relative_relationship", typeof(int));
    
            var phone_homeParameter = phone_home != null ?
                new ObjectParameter("phone_home", phone_home) :
                new ObjectParameter("phone_home", typeof(string));
    
            var phone_mobileParameter = phone_mobile != null ?
                new ObjectParameter("phone_mobile", phone_mobile) :
                new ObjectParameter("phone_mobile", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var item_indexParameter = item_index.HasValue ?
                new ObjectParameter("item_index", item_index) :
                new ObjectParameter("item_index", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_RELATIVE_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, surnameParameter, nameParameter, secnameParameter, ageParameter, birth_yearParameter, relative_relationshipParameter, phone_homeParameter, phone_mobileParameter, commentParameter, item_indexParameter);
        }
    
        public virtual int MC_POLD_RELATIVE_UPDATE(Nullable<long> counter0_relative, Nullable<int> lpuin_relative, Nullable<int> lpuin, string @operator, string surname, string name, string secname, Nullable<int> birth_year, Nullable<byte> age, Nullable<int> relative_relationship, string phone_home, string phone_mobile, string comment)
        {
            var counter0_relativeParameter = counter0_relative.HasValue ?
                new ObjectParameter("counter0_relative", counter0_relative) :
                new ObjectParameter("counter0_relative", typeof(long));
    
            var lpuin_relativeParameter = lpuin_relative.HasValue ?
                new ObjectParameter("lpuin_relative", lpuin_relative) :
                new ObjectParameter("lpuin_relative", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var secnameParameter = secname != null ?
                new ObjectParameter("secname", secname) :
                new ObjectParameter("secname", typeof(string));
    
            var birth_yearParameter = birth_year.HasValue ?
                new ObjectParameter("birth_year", birth_year) :
                new ObjectParameter("birth_year", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(byte));
    
            var relative_relationshipParameter = relative_relationship.HasValue ?
                new ObjectParameter("relative_relationship", relative_relationship) :
                new ObjectParameter("relative_relationship", typeof(int));
    
            var phone_homeParameter = phone_home != null ?
                new ObjectParameter("phone_home", phone_home) :
                new ObjectParameter("phone_home", typeof(string));
    
            var phone_mobileParameter = phone_mobile != null ?
                new ObjectParameter("phone_mobile", phone_mobile) :
                new ObjectParameter("phone_mobile", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_RELATIVE_UPDATE", counter0_relativeParameter, lpuin_relativeParameter, lpuinParameter, operatorParameter, surnameParameter, nameParameter, secnameParameter, birth_yearParameter, ageParameter, relative_relationshipParameter, phone_homeParameter, phone_mobileParameter, commentParameter);
        }
    
        public virtual int MC_POLD_WORK_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_fio, Nullable<int> lpuin_fio, string org_name, string org_scope, string post, string schedule, Nullable<int> hire_year, Nullable<int> hire_month, Nullable<int> hire_day, string chief_surname, string chief_name, string chief_secname, string post_index, Nullable<short> area, Nullable<short> ter, Nullable<short> orgn1, Nullable<short> orgn2, Nullable<short> orgn3, Nullable<short> razdel, string okato, Nullable<int> street, Nullable<short> house, string houseliter, Nullable<byte> corpus, Nullable<short> flat, string flatliter, string fulladr, string commentadr, string phone_secretary, string phone_work, string org_site, Nullable<int> salary, Nullable<int> est_dop_dohod, string business_desc, Nullable<int> business_profit, Nullable<int> property_profit, Nullable<int> pension, Nullable<int> benefit, Nullable<int> other_profit, Nullable<int> general_family_profit, Nullable<int> obligatory_payment)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var org_nameParameter = org_name != null ?
                new ObjectParameter("org_name", org_name) :
                new ObjectParameter("org_name", typeof(string));
    
            var org_scopeParameter = org_scope != null ?
                new ObjectParameter("org_scope", org_scope) :
                new ObjectParameter("org_scope", typeof(string));
    
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("schedule", schedule) :
                new ObjectParameter("schedule", typeof(string));
    
            var hire_yearParameter = hire_year.HasValue ?
                new ObjectParameter("hire_year", hire_year) :
                new ObjectParameter("hire_year", typeof(int));
    
            var hire_monthParameter = hire_month.HasValue ?
                new ObjectParameter("hire_month", hire_month) :
                new ObjectParameter("hire_month", typeof(int));
    
            var hire_dayParameter = hire_day.HasValue ?
                new ObjectParameter("hire_day", hire_day) :
                new ObjectParameter("hire_day", typeof(int));
    
            var chief_surnameParameter = chief_surname != null ?
                new ObjectParameter("chief_surname", chief_surname) :
                new ObjectParameter("chief_surname", typeof(string));
    
            var chief_nameParameter = chief_name != null ?
                new ObjectParameter("chief_name", chief_name) :
                new ObjectParameter("chief_name", typeof(string));
    
            var chief_secnameParameter = chief_secname != null ?
                new ObjectParameter("chief_secname", chief_secname) :
                new ObjectParameter("chief_secname", typeof(string));
    
            var post_indexParameter = post_index != null ?
                new ObjectParameter("post_index", post_index) :
                new ObjectParameter("post_index", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(short));
    
            var terParameter = ter.HasValue ?
                new ObjectParameter("ter", ter) :
                new ObjectParameter("ter", typeof(short));
    
            var orgn1Parameter = orgn1.HasValue ?
                new ObjectParameter("orgn1", orgn1) :
                new ObjectParameter("orgn1", typeof(short));
    
            var orgn2Parameter = orgn2.HasValue ?
                new ObjectParameter("orgn2", orgn2) :
                new ObjectParameter("orgn2", typeof(short));
    
            var orgn3Parameter = orgn3.HasValue ?
                new ObjectParameter("orgn3", orgn3) :
                new ObjectParameter("orgn3", typeof(short));
    
            var razdelParameter = razdel.HasValue ?
                new ObjectParameter("razdel", razdel) :
                new ObjectParameter("razdel", typeof(short));
    
            var okatoParameter = okato != null ?
                new ObjectParameter("okato", okato) :
                new ObjectParameter("okato", typeof(string));
    
            var streetParameter = street.HasValue ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(int));
    
            var houseParameter = house.HasValue ?
                new ObjectParameter("house", house) :
                new ObjectParameter("house", typeof(short));
    
            var houseliterParameter = houseliter != null ?
                new ObjectParameter("houseliter", houseliter) :
                new ObjectParameter("houseliter", typeof(string));
    
            var corpusParameter = corpus.HasValue ?
                new ObjectParameter("corpus", corpus) :
                new ObjectParameter("corpus", typeof(byte));
    
            var flatParameter = flat.HasValue ?
                new ObjectParameter("flat", flat) :
                new ObjectParameter("flat", typeof(short));
    
            var flatliterParameter = flatliter != null ?
                new ObjectParameter("flatliter", flatliter) :
                new ObjectParameter("flatliter", typeof(string));
    
            var fulladrParameter = fulladr != null ?
                new ObjectParameter("fulladr", fulladr) :
                new ObjectParameter("fulladr", typeof(string));
    
            var commentadrParameter = commentadr != null ?
                new ObjectParameter("commentadr", commentadr) :
                new ObjectParameter("commentadr", typeof(string));
    
            var phone_secretaryParameter = phone_secretary != null ?
                new ObjectParameter("phone_secretary", phone_secretary) :
                new ObjectParameter("phone_secretary", typeof(string));
    
            var phone_workParameter = phone_work != null ?
                new ObjectParameter("phone_work", phone_work) :
                new ObjectParameter("phone_work", typeof(string));
    
            var org_siteParameter = org_site != null ?
                new ObjectParameter("org_site", org_site) :
                new ObjectParameter("org_site", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var est_dop_dohodParameter = est_dop_dohod.HasValue ?
                new ObjectParameter("est_dop_dohod", est_dop_dohod) :
                new ObjectParameter("est_dop_dohod", typeof(int));
    
            var business_descParameter = business_desc != null ?
                new ObjectParameter("business_desc", business_desc) :
                new ObjectParameter("business_desc", typeof(string));
    
            var business_profitParameter = business_profit.HasValue ?
                new ObjectParameter("business_profit", business_profit) :
                new ObjectParameter("business_profit", typeof(int));
    
            var property_profitParameter = property_profit.HasValue ?
                new ObjectParameter("property_profit", property_profit) :
                new ObjectParameter("property_profit", typeof(int));
    
            var pensionParameter = pension.HasValue ?
                new ObjectParameter("pension", pension) :
                new ObjectParameter("pension", typeof(int));
    
            var benefitParameter = benefit.HasValue ?
                new ObjectParameter("benefit", benefit) :
                new ObjectParameter("benefit", typeof(int));
    
            var other_profitParameter = other_profit.HasValue ?
                new ObjectParameter("other_profit", other_profit) :
                new ObjectParameter("other_profit", typeof(int));
    
            var general_family_profitParameter = general_family_profit.HasValue ?
                new ObjectParameter("general_family_profit", general_family_profit) :
                new ObjectParameter("general_family_profit", typeof(int));
    
            var obligatory_paymentParameter = obligatory_payment.HasValue ?
                new ObjectParameter("obligatory_payment", obligatory_payment) :
                new ObjectParameter("obligatory_payment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_WORK_INSERT", lpuinParameter, operatorParameter, counter0_fioParameter, lpuin_fioParameter, org_nameParameter, org_scopeParameter, postParameter, scheduleParameter, hire_yearParameter, hire_monthParameter, hire_dayParameter, chief_surnameParameter, chief_nameParameter, chief_secnameParameter, post_indexParameter, areaParameter, terParameter, orgn1Parameter, orgn2Parameter, orgn3Parameter, razdelParameter, okatoParameter, streetParameter, houseParameter, houseliterParameter, corpusParameter, flatParameter, flatliterParameter, fulladrParameter, commentadrParameter, phone_secretaryParameter, phone_workParameter, org_siteParameter, salaryParameter, est_dop_dohodParameter, business_descParameter, business_profitParameter, property_profitParameter, pensionParameter, benefitParameter, other_profitParameter, general_family_profitParameter, obligatory_paymentParameter);
        }
    
        public virtual int MC_POLD_WORK_UPDATE(Nullable<long> counter0_fio, Nullable<int> lpuin_fio, Nullable<int> lpuin, string @operator, string org_name, string org_scope, string post, string schedule, Nullable<int> hire_year, Nullable<int> hire_month, Nullable<int> hire_day, string chief_surname, string chief_name, string chief_secname, string post_index, Nullable<short> area, Nullable<short> ter, Nullable<short> orgn1, Nullable<short> orgn2, Nullable<short> orgn3, Nullable<short> razdel, string okato, Nullable<short> street, Nullable<short> house, string houseliter, Nullable<byte> corpus, Nullable<short> flat, string flatliter, string fulladr, string commentadr, string phone_secretary, string phone_work, string org_site, Nullable<int> salary, Nullable<int> est_dop_dohod, string business_desc, Nullable<int> business_profit, Nullable<int> property_profit, Nullable<int> pension, Nullable<int> benefit, Nullable<int> other_profit, Nullable<int> general_family_profit, Nullable<int> obligatory_payment)
        {
            var counter0_fioParameter = counter0_fio.HasValue ?
                new ObjectParameter("counter0_fio", counter0_fio) :
                new ObjectParameter("counter0_fio", typeof(long));
    
            var lpuin_fioParameter = lpuin_fio.HasValue ?
                new ObjectParameter("lpuin_fio", lpuin_fio) :
                new ObjectParameter("lpuin_fio", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var org_nameParameter = org_name != null ?
                new ObjectParameter("org_name", org_name) :
                new ObjectParameter("org_name", typeof(string));
    
            var org_scopeParameter = org_scope != null ?
                new ObjectParameter("org_scope", org_scope) :
                new ObjectParameter("org_scope", typeof(string));
    
            var postParameter = post != null ?
                new ObjectParameter("post", post) :
                new ObjectParameter("post", typeof(string));
    
            var scheduleParameter = schedule != null ?
                new ObjectParameter("schedule", schedule) :
                new ObjectParameter("schedule", typeof(string));
    
            var hire_yearParameter = hire_year.HasValue ?
                new ObjectParameter("hire_year", hire_year) :
                new ObjectParameter("hire_year", typeof(int));
    
            var hire_monthParameter = hire_month.HasValue ?
                new ObjectParameter("hire_month", hire_month) :
                new ObjectParameter("hire_month", typeof(int));
    
            var hire_dayParameter = hire_day.HasValue ?
                new ObjectParameter("hire_day", hire_day) :
                new ObjectParameter("hire_day", typeof(int));
    
            var chief_surnameParameter = chief_surname != null ?
                new ObjectParameter("chief_surname", chief_surname) :
                new ObjectParameter("chief_surname", typeof(string));
    
            var chief_nameParameter = chief_name != null ?
                new ObjectParameter("chief_name", chief_name) :
                new ObjectParameter("chief_name", typeof(string));
    
            var chief_secnameParameter = chief_secname != null ?
                new ObjectParameter("chief_secname", chief_secname) :
                new ObjectParameter("chief_secname", typeof(string));
    
            var post_indexParameter = post_index != null ?
                new ObjectParameter("post_index", post_index) :
                new ObjectParameter("post_index", typeof(string));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(short));
    
            var terParameter = ter.HasValue ?
                new ObjectParameter("ter", ter) :
                new ObjectParameter("ter", typeof(short));
    
            var orgn1Parameter = orgn1.HasValue ?
                new ObjectParameter("orgn1", orgn1) :
                new ObjectParameter("orgn1", typeof(short));
    
            var orgn2Parameter = orgn2.HasValue ?
                new ObjectParameter("orgn2", orgn2) :
                new ObjectParameter("orgn2", typeof(short));
    
            var orgn3Parameter = orgn3.HasValue ?
                new ObjectParameter("orgn3", orgn3) :
                new ObjectParameter("orgn3", typeof(short));
    
            var razdelParameter = razdel.HasValue ?
                new ObjectParameter("razdel", razdel) :
                new ObjectParameter("razdel", typeof(short));
    
            var okatoParameter = okato != null ?
                new ObjectParameter("okato", okato) :
                new ObjectParameter("okato", typeof(string));
    
            var streetParameter = street.HasValue ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(short));
    
            var houseParameter = house.HasValue ?
                new ObjectParameter("house", house) :
                new ObjectParameter("house", typeof(short));
    
            var houseliterParameter = houseliter != null ?
                new ObjectParameter("houseliter", houseliter) :
                new ObjectParameter("houseliter", typeof(string));
    
            var corpusParameter = corpus.HasValue ?
                new ObjectParameter("corpus", corpus) :
                new ObjectParameter("corpus", typeof(byte));
    
            var flatParameter = flat.HasValue ?
                new ObjectParameter("flat", flat) :
                new ObjectParameter("flat", typeof(short));
    
            var flatliterParameter = flatliter != null ?
                new ObjectParameter("flatliter", flatliter) :
                new ObjectParameter("flatliter", typeof(string));
    
            var fulladrParameter = fulladr != null ?
                new ObjectParameter("fulladr", fulladr) :
                new ObjectParameter("fulladr", typeof(string));
    
            var commentadrParameter = commentadr != null ?
                new ObjectParameter("commentadr", commentadr) :
                new ObjectParameter("commentadr", typeof(string));
    
            var phone_secretaryParameter = phone_secretary != null ?
                new ObjectParameter("phone_secretary", phone_secretary) :
                new ObjectParameter("phone_secretary", typeof(string));
    
            var phone_workParameter = phone_work != null ?
                new ObjectParameter("phone_work", phone_work) :
                new ObjectParameter("phone_work", typeof(string));
    
            var org_siteParameter = org_site != null ?
                new ObjectParameter("org_site", org_site) :
                new ObjectParameter("org_site", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var est_dop_dohodParameter = est_dop_dohod.HasValue ?
                new ObjectParameter("est_dop_dohod", est_dop_dohod) :
                new ObjectParameter("est_dop_dohod", typeof(int));
    
            var business_descParameter = business_desc != null ?
                new ObjectParameter("business_desc", business_desc) :
                new ObjectParameter("business_desc", typeof(string));
    
            var business_profitParameter = business_profit.HasValue ?
                new ObjectParameter("business_profit", business_profit) :
                new ObjectParameter("business_profit", typeof(int));
    
            var property_profitParameter = property_profit.HasValue ?
                new ObjectParameter("property_profit", property_profit) :
                new ObjectParameter("property_profit", typeof(int));
    
            var pensionParameter = pension.HasValue ?
                new ObjectParameter("pension", pension) :
                new ObjectParameter("pension", typeof(int));
    
            var benefitParameter = benefit.HasValue ?
                new ObjectParameter("benefit", benefit) :
                new ObjectParameter("benefit", typeof(int));
    
            var other_profitParameter = other_profit.HasValue ?
                new ObjectParameter("other_profit", other_profit) :
                new ObjectParameter("other_profit", typeof(int));
    
            var general_family_profitParameter = general_family_profit.HasValue ?
                new ObjectParameter("general_family_profit", general_family_profit) :
                new ObjectParameter("general_family_profit", typeof(int));
    
            var obligatory_paymentParameter = obligatory_payment.HasValue ?
                new ObjectParameter("obligatory_payment", obligatory_payment) :
                new ObjectParameter("obligatory_payment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_POLD_WORK_UPDATE", counter0_fioParameter, lpuin_fioParameter, lpuinParameter, operatorParameter, org_nameParameter, org_scopeParameter, postParameter, scheduleParameter, hire_yearParameter, hire_monthParameter, hire_dayParameter, chief_surnameParameter, chief_nameParameter, chief_secnameParameter, post_indexParameter, areaParameter, terParameter, orgn1Parameter, orgn2Parameter, orgn3Parameter, razdelParameter, okatoParameter, streetParameter, houseParameter, houseliterParameter, corpusParameter, flatParameter, flatliterParameter, fulladrParameter, commentadrParameter, phone_secretaryParameter, phone_workParameter, org_siteParameter, salaryParameter, est_dop_dohodParameter, business_descParameter, business_profitParameter, property_profitParameter, pensionParameter, benefitParameter, other_profitParameter, general_family_profitParameter, obligatory_paymentParameter);
        }
    
        public virtual ObjectResult<string> MC_POLM_CREDIT_TEMPLATE_DELETE(Nullable<long> counter0_credit_template, Nullable<int> lpuin_credit_template, Nullable<int> lpuin, string @operator)
        {
            var counter0_credit_templateParameter = counter0_credit_template.HasValue ?
                new ObjectParameter("counter0_credit_template", counter0_credit_template) :
                new ObjectParameter("counter0_credit_template", typeof(long));
    
            var lpuin_credit_templateParameter = lpuin_credit_template.HasValue ?
                new ObjectParameter("lpuin_credit_template", lpuin_credit_template) :
                new ObjectParameter("lpuin_credit_template", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MC_POLM_CREDIT_TEMPLATE_DELETE", counter0_credit_templateParameter, lpuin_credit_templateParameter, lpuinParameter, operatorParameter);
        }
    
        public virtual ObjectResult<MC_POLM_CREDIT_TEMPLATE_INSERT_Result> MC_POLM_CREDIT_TEMPLATE_INSERT(Nullable<int> lpuin, string @operator, Nullable<int> code, string name, Nullable<decimal> stavka_v_den, Nullable<decimal> percent_penalty, Nullable<int> fixed_penalty, Nullable<int> floating_penalty, Nullable<int> floating_penalty_day, Nullable<int> floating_penalty_count, Nullable<long> profile_counter, Nullable<int> profile_lpuin)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stavka_v_denParameter = stavka_v_den.HasValue ?
                new ObjectParameter("stavka_v_den", stavka_v_den) :
                new ObjectParameter("stavka_v_den", typeof(decimal));
    
            var percent_penaltyParameter = percent_penalty.HasValue ?
                new ObjectParameter("percent_penalty", percent_penalty) :
                new ObjectParameter("percent_penalty", typeof(decimal));
    
            var fixed_penaltyParameter = fixed_penalty.HasValue ?
                new ObjectParameter("fixed_penalty", fixed_penalty) :
                new ObjectParameter("fixed_penalty", typeof(int));
    
            var floating_penaltyParameter = floating_penalty.HasValue ?
                new ObjectParameter("floating_penalty", floating_penalty) :
                new ObjectParameter("floating_penalty", typeof(int));
    
            var floating_penalty_dayParameter = floating_penalty_day.HasValue ?
                new ObjectParameter("floating_penalty_day", floating_penalty_day) :
                new ObjectParameter("floating_penalty_day", typeof(int));
    
            var floating_penalty_countParameter = floating_penalty_count.HasValue ?
                new ObjectParameter("floating_penalty_count", floating_penalty_count) :
                new ObjectParameter("floating_penalty_count", typeof(int));
    
            var profile_counterParameter = profile_counter.HasValue ?
                new ObjectParameter("profile_counter", profile_counter) :
                new ObjectParameter("profile_counter", typeof(long));
    
            var profile_lpuinParameter = profile_lpuin.HasValue ?
                new ObjectParameter("profile_lpuin", profile_lpuin) :
                new ObjectParameter("profile_lpuin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_POLM_CREDIT_TEMPLATE_INSERT_Result>("MC_POLM_CREDIT_TEMPLATE_INSERT", lpuinParameter, operatorParameter, codeParameter, nameParameter, stavka_v_denParameter, percent_penaltyParameter, fixed_penaltyParameter, floating_penaltyParameter, floating_penalty_dayParameter, floating_penalty_countParameter, profile_counterParameter, profile_lpuinParameter);
        }
    
        public virtual ObjectResult<MC_POLM_CREDIT_TEMPLATE_UPDATE_Result> MC_POLM_CREDIT_TEMPLATE_UPDATE(Nullable<long> counter0_credit_template, Nullable<int> lpuin_credit_template, Nullable<int> lpuin, string @operator, string name, Nullable<decimal> stavka_v_den, Nullable<decimal> percent_penalty, Nullable<int> fixed_penalty, Nullable<int> floating_penalty, Nullable<int> floating_penalty_day, Nullable<int> floating_penalty_count, Nullable<long> profile_counter, Nullable<int> profile_lpuin)
        {
            var counter0_credit_templateParameter = counter0_credit_template.HasValue ?
                new ObjectParameter("counter0_credit_template", counter0_credit_template) :
                new ObjectParameter("counter0_credit_template", typeof(long));
    
            var lpuin_credit_templateParameter = lpuin_credit_template.HasValue ?
                new ObjectParameter("lpuin_credit_template", lpuin_credit_template) :
                new ObjectParameter("lpuin_credit_template", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stavka_v_denParameter = stavka_v_den.HasValue ?
                new ObjectParameter("stavka_v_den", stavka_v_den) :
                new ObjectParameter("stavka_v_den", typeof(decimal));
    
            var percent_penaltyParameter = percent_penalty.HasValue ?
                new ObjectParameter("percent_penalty", percent_penalty) :
                new ObjectParameter("percent_penalty", typeof(decimal));
    
            var fixed_penaltyParameter = fixed_penalty.HasValue ?
                new ObjectParameter("fixed_penalty", fixed_penalty) :
                new ObjectParameter("fixed_penalty", typeof(int));
    
            var floating_penaltyParameter = floating_penalty.HasValue ?
                new ObjectParameter("floating_penalty", floating_penalty) :
                new ObjectParameter("floating_penalty", typeof(int));
    
            var floating_penalty_dayParameter = floating_penalty_day.HasValue ?
                new ObjectParameter("floating_penalty_day", floating_penalty_day) :
                new ObjectParameter("floating_penalty_day", typeof(int));
    
            var floating_penalty_countParameter = floating_penalty_count.HasValue ?
                new ObjectParameter("floating_penalty_count", floating_penalty_count) :
                new ObjectParameter("floating_penalty_count", typeof(int));
    
            var profile_counterParameter = profile_counter.HasValue ?
                new ObjectParameter("profile_counter", profile_counter) :
                new ObjectParameter("profile_counter", typeof(long));
    
            var profile_lpuinParameter = profile_lpuin.HasValue ?
                new ObjectParameter("profile_lpuin", profile_lpuin) :
                new ObjectParameter("profile_lpuin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_POLM_CREDIT_TEMPLATE_UPDATE_Result>("MC_POLM_CREDIT_TEMPLATE_UPDATE", counter0_credit_templateParameter, lpuin_credit_templateParameter, lpuinParameter, operatorParameter, nameParameter, stavka_v_denParameter, percent_penaltyParameter, fixed_penaltyParameter, floating_penaltyParameter, floating_penalty_dayParameter, floating_penalty_countParameter, profile_counterParameter, profile_lpuinParameter);
        }
    
        public virtual int MC_PROV_TEL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_PROV_TEL");
        }
    
        public virtual ObjectResult<MC_SEARCH_OKATO_Result> MC_SEARCH_OKATO(Nullable<short> ter, string full_name_part)
        {
            var terParameter = ter.HasValue ?
                new ObjectParameter("ter", ter) :
                new ObjectParameter("ter", typeof(short));
    
            var full_name_partParameter = full_name_part != null ?
                new ObjectParameter("full_name_part", full_name_part) :
                new ObjectParameter("full_name_part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_SEARCH_OKATO_Result>("MC_SEARCH_OKATO", terParameter, full_name_partParameter);
        }
    
        public virtual int MC_USRD_OPTIONS_INSERT(Nullable<int> lpuin, string @operator, Nullable<long> counter0_user, Nullable<int> lpuin_user, Nullable<int> arhivniy_dokument, Nullable<int> active_doctype_po_umolchaniyu, Nullable<int> arhive_doctype_po_umolchaniyu, Nullable<int> ter_po_umolchaniyu, Nullable<byte> sposob_otpravki_sms)
        {
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var counter0_userParameter = counter0_user.HasValue ?
                new ObjectParameter("counter0_user", counter0_user) :
                new ObjectParameter("counter0_user", typeof(long));
    
            var lpuin_userParameter = lpuin_user.HasValue ?
                new ObjectParameter("lpuin_user", lpuin_user) :
                new ObjectParameter("lpuin_user", typeof(int));
    
            var arhivniy_dokumentParameter = arhivniy_dokument.HasValue ?
                new ObjectParameter("arhivniy_dokument", arhivniy_dokument) :
                new ObjectParameter("arhivniy_dokument", typeof(int));
    
            var active_doctype_po_umolchaniyuParameter = active_doctype_po_umolchaniyu.HasValue ?
                new ObjectParameter("active_doctype_po_umolchaniyu", active_doctype_po_umolchaniyu) :
                new ObjectParameter("active_doctype_po_umolchaniyu", typeof(int));
    
            var arhive_doctype_po_umolchaniyuParameter = arhive_doctype_po_umolchaniyu.HasValue ?
                new ObjectParameter("arhive_doctype_po_umolchaniyu", arhive_doctype_po_umolchaniyu) :
                new ObjectParameter("arhive_doctype_po_umolchaniyu", typeof(int));
    
            var ter_po_umolchaniyuParameter = ter_po_umolchaniyu.HasValue ?
                new ObjectParameter("ter_po_umolchaniyu", ter_po_umolchaniyu) :
                new ObjectParameter("ter_po_umolchaniyu", typeof(int));
    
            var sposob_otpravki_smsParameter = sposob_otpravki_sms.HasValue ?
                new ObjectParameter("sposob_otpravki_sms", sposob_otpravki_sms) :
                new ObjectParameter("sposob_otpravki_sms", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_USRD_OPTIONS_INSERT", lpuinParameter, operatorParameter, counter0_userParameter, lpuin_userParameter, arhivniy_dokumentParameter, active_doctype_po_umolchaniyuParameter, arhive_doctype_po_umolchaniyuParameter, ter_po_umolchaniyuParameter, sposob_otpravki_smsParameter);
        }
    
        public virtual int MC_USRD_OPTIONS_UPDATE(Nullable<long> counter0_options, Nullable<int> lpuin_options, Nullable<int> lpuin, string @operator, Nullable<int> arhivniy_dokument, Nullable<int> active_doctype_po_umolchaniyu, Nullable<int> arhive_doctype_po_umolchaniyu, Nullable<int> ter_po_umolchaniyu, Nullable<byte> sposob_otpravki_sms)
        {
            var counter0_optionsParameter = counter0_options.HasValue ?
                new ObjectParameter("counter0_options", counter0_options) :
                new ObjectParameter("counter0_options", typeof(long));
    
            var lpuin_optionsParameter = lpuin_options.HasValue ?
                new ObjectParameter("lpuin_options", lpuin_options) :
                new ObjectParameter("lpuin_options", typeof(int));
    
            var lpuinParameter = lpuin.HasValue ?
                new ObjectParameter("lpuin", lpuin) :
                new ObjectParameter("lpuin", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            var arhivniy_dokumentParameter = arhivniy_dokument.HasValue ?
                new ObjectParameter("arhivniy_dokument", arhivniy_dokument) :
                new ObjectParameter("arhivniy_dokument", typeof(int));
    
            var active_doctype_po_umolchaniyuParameter = active_doctype_po_umolchaniyu.HasValue ?
                new ObjectParameter("active_doctype_po_umolchaniyu", active_doctype_po_umolchaniyu) :
                new ObjectParameter("active_doctype_po_umolchaniyu", typeof(int));
    
            var arhive_doctype_po_umolchaniyuParameter = arhive_doctype_po_umolchaniyu.HasValue ?
                new ObjectParameter("arhive_doctype_po_umolchaniyu", arhive_doctype_po_umolchaniyu) :
                new ObjectParameter("arhive_doctype_po_umolchaniyu", typeof(int));
    
            var ter_po_umolchaniyuParameter = ter_po_umolchaniyu.HasValue ?
                new ObjectParameter("ter_po_umolchaniyu", ter_po_umolchaniyu) :
                new ObjectParameter("ter_po_umolchaniyu", typeof(int));
    
            var sposob_otpravki_smsParameter = sposob_otpravki_sms.HasValue ?
                new ObjectParameter("sposob_otpravki_sms", sposob_otpravki_sms) :
                new ObjectParameter("sposob_otpravki_sms", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_USRD_OPTIONS_UPDATE", counter0_optionsParameter, lpuin_optionsParameter, lpuinParameter, operatorParameter, arhivniy_dokumentParameter, active_doctype_po_umolchaniyuParameter, arhive_doctype_po_umolchaniyuParameter, ter_po_umolchaniyuParameter, sposob_otpravki_smsParameter);
        }
    
        public virtual ObjectResult<MC_BROWSE_FIO_Result> MC_BROWSE_FIO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MC_BROWSE_FIO_Result>("MC_BROWSE_FIO");
        }
    }
}
